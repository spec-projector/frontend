image: docker:18
variables:
  DOCKER_CACHE_IMAGE: $CI_REGISTRY_IMAGE/cache
  DOCKER_IMAGE: $CI_REGISTRY_IMAGE/tmp:${CI_PIPELINE_ID}_${CI_COMMIT_SHA}
  DOCKER_TEST_IMAGE: $CI_REGISTRY_IMAGE/tmp:${CI_PIPELINE_ID}_${CI_COMMIT_SHA}_test

stages:
  - build
  - docker
  - publish
  - deploy

build:
  stage: build
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
    - docker pull $DOCKER_CACHE_IMAGE || true
    - docker build --cache-from $DOCKER_CACHE_IMAGE --target build -t $DOCKER_CACHE_IMAGE -f deploy/Dockerfile .
    - docker build --cache-from $DOCKER_CACHE_IMAGE -t $DOCKER_IMAGE -f deploy/Dockerfile .
    - docker push $DOCKER_IMAGE
    - docker push $DOCKER_CACHE_IMAGE


.base_publish:
  stage: publish
  dependencies: []
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
    - docker pull $DOCKER_IMAGE
  script:
    - docker tag $DOCKER_IMAGE $TARGET_IMAGE
    - docker push $TARGET_IMAGE

publish_unstable:
  extends: .base_publish
  only:
    - master
  variables:
    TARGET_IMAGE: $CI_REGISTRY_IMAGE/unstable:${CI_PIPELINE_ID}

.base_deploy:
  image: curlimages/curl:7.72.0
  stage: deploy
  dependencies: []
  script:
    - curl -k -X POST -d "component=${DEPLOYER_COMPONENT}&key=${DEPLOYER_KEY}&tag=${CI_PIPELINE_ID}" ${DEPLOYER_HOST}

deploy_development:
  extends: .base_deploy
  only:
    - master
  environment:
    name: development
    url: $SITE_ADDRESS
